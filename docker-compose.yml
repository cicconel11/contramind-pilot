services:
  postgres:
    image: postgres:16-alpine
    container_name: cm-postgres
    environment:
      POSTGRES_USER: cm
      POSTGRES_PASSWORD: cm
      POSTGRES_DB: cm
    ports:
      - "5433:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro

  worldcheck:
    build: ./services/worldcheck
    container_name: cm-worldcheck
    environment:
      WC_LATENCY_MAX_MS: "1500"
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/metrics"]
      interval: 10s
      timeout: 3s
      retries: 5

  attestor:
    build: ./services/attestor
    container_name: cm-attestor
    environment:
      ATTESTOR_KEYS: "ed25519:v1:demo-seed-change-me;ed25519:v2:next-rotating-seed"
      ATTESTOR_ACTIVE_KID: "ed25519:v1"
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/metrics"]
      interval: 10s
      timeout: 3s
      retries: 5

  client:
    build: ./services/client
    container_name: cm-client
    depends_on:
      - postgres
      - attestor
    environment:
      PGHOST: postgres
      PGUSER: cm
      PGPASSWORD: cm
      PGDATABASE: cm
      PGPORT: "5432"
      ATTESTOR_URL: "http://attestor:8080"
      WORLDCHECK_URL: "http://worldcheck:8080"
    command: ["python", "demo.py"]

  control:
    build: ./services/control
    container_name: cm-control
    environment:
      ADMIN_TOKEN: "changeme"
      PGHOST: postgres
      PGUSER: cm
      PGPASSWORD: cm
      PGDATABASE: cm
      PGPORT: "5432"
    ports:
      - "8083:8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: cm-prometheus
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - worldcheck
      - attestor
      - control

  grafana:
    image: grafana/grafana
    container_name: cm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus

  anchor:
    build: ./services/anchor
    container_name: cm-anchor
    depends_on:
      - postgres
      - attestor
    environment:
      PGHOST: postgres
      PGUSER: cm
      PGPASSWORD: cm
      PGDATABASE: cm
      PGPORT: "5432"
      ATTESTOR_URL: "http://attestor:8080"
